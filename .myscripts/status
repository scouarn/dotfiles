#!/usr/bin/sh

# Status line script
# Uses nerd font


# Disks
HOME=$(df -h | awk '{if ($6 == "/home") {print $6,$4}}')
ROOT=$(df -h | awk '{if ($6 == "/"    ) {print $6,$4}}')

# RAM
FREE=$(free -th | tail -1 | awk '{print $3"/"$2}')

# CPU 
# NOTE: vmstat     -> average since boot
#       vmstat 1 2 -> average over a second (adds a 1s delay)
CPU_IDLE=$(vmstat 1 2 | tail -1 | awk '{print $15}')
CPU_USAGE=$((100 - $CPU_IDLE))

# Network
NET=$(nmcli device | awk '{if ($2 == "wifi") {print $4}}')

# Power
if [ -x '/usr/bin/acpi' ]; then
    ACPI=$(acpi)
    BATT_STATUS=$(echo "$ACPI" | sed -n 's/^[^:]*:\s*\([^,]*\),.*$/\1/p')
    BATT_PERC=$(echo "$ACPI"   | awk -F ',' '{printf "%d",$2}')
    BATT_TIME=$(echo "$ACPI"   | awk -F ',' '{print $3}')

    if [ -n "$BATT_TIME" ]; then
        BATT_TIME=$(echo $BATT_TIME | awk -F ':' '{printf "%dh%02d",$1,$2}')
    fi 

    if [ "$BATT_STATUS" = 'Charging' ]; then
        BATT_ICON=''
    else case "$((BATT_PERC / 10))" in
        1 ) BATT_ICON='';;
        2 ) BATT_ICON='';;
        3 ) BATT_ICON='';;
        4 ) BATT_ICON='';;
        5 ) BATT_ICON='';;
        6 ) BATT_ICON='';;
        7 ) BATT_ICON='';;
        8 ) BATT_ICON='';;
        9 ) BATT_ICON='';;
       10 ) BATT_ICON='';;
        * ) BATT_ICON='';;
    esac fi
fi

# Time
# NOTE: Omitting seconds because of lag
DATE=$(date +'%a %d %b')
TIME=$(date +'%H:%M') #'%H:%M:%S'


# Composing the status line
SEP=" | "
OUT=""
OUT="$OUT$SEP $ROOT"
OUT="$OUT$SEP $HOME"
OUT="$OUT$SEP $CPU_USAGE%"
OUT="$OUT$SEP $FREE"

if [ -n "$NET" ]; then
    OUT="$OUT$SEP $NET"
fi

if [ -n "$BATT_ICON" ]; then
    OUT="$OUT$SEP$BATT_ICON $BATT_PERC%"
    if [ -n "$BATT_TIME" ]; then
        OUT="$OUT $BATT_TIME"
    fi
fi

OUT="$OUT$SEP$DATE $TIME "

# Output
echo "$OUT"
